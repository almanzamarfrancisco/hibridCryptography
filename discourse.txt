Hola buen día.
Soy Alejandro Almanza.
En este video presentaré el proyecto requerido para el ETS de Cryptografía plan 2009.
El siguiente diagrama describe el flujo requerido


Se implementó en lenguaje python versión 3 un pequeño sistema criptografico con esta estructura:

Cabe mencionar que este programa sólo se puede ejecutar de manera efectiva en sistemas operativos basados
en linux tales como Alphine linux, Ubuntu o MacOS Ventura; ya que hace uso del dispositivo virtual (o archivo) urandom ("/dev/urandom") el cual contiene bytes aleatorios con los que se pueden realizar algoritmos criptográficos; ya que son producto del ruido ambiental recopilado de controladores de dispositivos y otras fuentes.

El escenario planteado es el siguiente:
"Alice y Bert se quieren comunicar de manera secreta a través de la web con cifrado y descifrado
que tenga el servicio de de autenticación opcional"

Se aplicó un esquema de criptografía híbrida que usa el protocolo AES-128 para lograr un cifrado del mensaje y servicio de autenticación. A su vez se usó un cifrado RSA-512 para cifrar los parámetros de dicho servicio de autenticación

En la interfaz gráfica podemos observar el lado de Alice y el lado de Bert, en las cajas de texto se escriben los mensajes que se desean enviar. La caja de texto de la parte inferior es la "Infobox", la cual funge como un historial en la ejecución del programa.

Al iniciar el programa se ejecuta una función que crea los directorios necesarios si no están presentes en la carpeta donde se ejecuta. Se generan las llaves pública y privada para Alice y para Bert y se guardan en sus respectivos directorios. Cabe mencionar que cada vez que se envía un mensaje se toman 16 bytes del dispositivo urandom de linux como Vector Inicial

El botón "Send to Bert" ejecuta el siguiente algoritmo: 
	1) Se toma el texto escrito de la caja 
	2) Se convierte la información a bytes en python
	3) Se cifra el texto con AES-128 y se guarda en un archivo oculto de linux en el directorio perteneciente a el destinatario
	4) Se toman los parámetros generados en el cifrado anterior y se guardan cifrados con RSA-512 en un archivo oculto de linux en la carpeta del destinatario
	5) Se vacía la caja de texto del remitente
El botón "Receive" ejecuta el siguiente algoritmo:
1) Se verifica que existan los archivos necesarios para ejecutar las funciones del procedimiento de recibir el mensaje 
2) Se toman los parámetros cifrados y se decifran con RSA-264 con las respectivas llaves 3) Se toman los parámetros descifrados y se utilizan para decifrar el mensaje
4) Se toma el valor del switch de servicio de autenticación y con respecto este se verifica la autenticidad del mensaje
5) Al final se muestra el mensaje descifrado en la "InfoBox" si el procedimiento fue exitoso o no

De antemano agradezco su atención y quedo atento a la retroalimentación
